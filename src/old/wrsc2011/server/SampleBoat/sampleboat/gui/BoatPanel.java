/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BoatPanel.java
 *
 * Created on Nov 1, 2010, 9:02:54 PM
 */

package sampleboat.gui;

import map.*;

import sampleboat.control.*;

/**
 *
 * @author Alex
 */
public class BoatPanel extends javax.swing.JPanel {

    protected RobSailBoat boat = null;

    protected SimpleMap simpleMap = null;

    protected ControlPanel controlPanel = null;

    protected WorldServerPanel worldServerPanel = null;

    protected BoatControl boatControl = null;

    protected TextRefresher textRefresher = null;
    
    /** Creates new form BoatPanel */
    public BoatPanel() {
        initComponents();        
    }

    public void setComponents(SimpleMap simpleMap,
            ControlPanel controlPanel,
            WorldServerPanel worldServerPanel) {
        this.simpleMap = simpleMap;
        this.controlPanel = controlPanel;
        this.worldServerPanel = worldServerPanel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDisconnect = new javax.swing.JButton();
        jButtonConnectGate = new javax.swing.JButton();
        jCheckBoxCtrl = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxMAC = new javax.swing.JComboBox();
        jCheckBoxAI = new javax.swing.JCheckBox();
        jTextFieldPort = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCOM = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonConnectCOM = new javax.swing.JButton();
        jCheckBoxInvert = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBoxOut = new javax.swing.JCheckBox();
        jComboBoxIP = new javax.swing.JComboBox();

        jButtonDisconnect.setText("disconnect");
        jButtonDisconnect.setEnabled(false);
        jButtonDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisconnectActionPerformed(evt);
            }
        });

        jButtonConnectGate.setText("connect (GATE)");
        jButtonConnectGate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectGateActionPerformed(evt);
            }
        });

        jCheckBoxCtrl.setText("ctrl");
        jCheckBoxCtrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCtrlActionPerformed(evt);
            }
        });

        jLabel3.setText("MAC");

        jComboBoxMAC.setEditable(true);
        jComboBoxMAC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "bce03f974", "bce049bd6", "bce049bdd", "bce031cc7", "bce041633", " " }));

        jCheckBoxAI.setText("ai");
        jCheckBoxAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAIActionPerformed(evt);
            }
        });

        jTextFieldPort.setText("6001");

        jLabel7.setText("COM");

        jLabel1.setText("IP");

        jTextFieldCOM.setText("COM3");

        jLabel2.setText("Port");

        jButtonConnectCOM.setText("connect (COM)");
        jButtonConnectCOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectCOMActionPerformed(evt);
            }
        });

        jCheckBoxInvert.setText("invert");
        jCheckBoxInvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxInvertActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jCheckBoxOut.setText("out");
        jCheckBoxOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOutActionPerformed(evt);
            }
        });

        jComboBoxIP.setEditable(true);
        jComboBoxIP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "127.0.0.1", "192.168.3.1" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPort, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(jTextFieldCOM, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBoxMAC, 0, 146, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxInvert))
                            .addComponent(jComboBoxIP, 0, 217, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonConnectGate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonConnectCOM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBoxOut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxCtrl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxAI)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonConnectGate)
                    .addComponent(jComboBoxIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConnectCOM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxMAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDisconnect)
                    .addComponent(jCheckBoxInvert))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldCOM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxOut)
                    .addComponent(jCheckBoxCtrl)
                    .addComponent(jCheckBoxAI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisconnectActionPerformed
        // TODO add your handling code here:
        boat.disconnect();
        jButtonDisconnect.setEnabled(false);
        jButtonConnectGate.setEnabled(true);
        jButtonConnectCOM.setEnabled(true);
}//GEN-LAST:event_jButtonDisconnectActionPerformed

    private void jButtonConnectGateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectGateActionPerformed
        // TODO add your handling code here:
        String strConnect = new String(
                "IP:" + jComboBoxIP.getModel().getSelectedItem() +
                " PORT:" + jTextFieldPort.getText() +
                " MAC:" + jComboBoxMAC.getModel().getSelectedItem());
        System.out.println("Connecting to " + strConnect);
        boat = new RobSailBoat(strConnect);
        boat.inverted = this.jCheckBoxInvert.isSelected();
        if (boat.connect("Alex")) {
            System.out.println("Connected to " + strConnect);
            jButtonConnectGate.setEnabled(false);
            jButtonDisconnect.setEnabled(true);
            jButtonConnectCOM.setEnabled(false);
            this.controlPanel.setRobSailBoat(boat);
        }
}//GEN-LAST:event_jButtonConnectGateActionPerformed

    private void jCheckBoxCtrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCtrlActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxCtrl.isSelected()) {
            boatControl = new BoatControl(boat, simpleMap);
            boatControl.start();
        } else {
            if (boatControl != null) boatControl.stop = true;
        }
}//GEN-LAST:event_jCheckBoxCtrlActionPerformed

    private void jCheckBoxAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAIActionPerformed
        // TODO add your handling code here:
        if (boatControl != null) {
            if (jCheckBoxAI.isSelected()) boatControl.active = true;
            else boatControl.active = false;
        }
}//GEN-LAST:event_jCheckBoxAIActionPerformed

    private void jButtonConnectCOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectCOMActionPerformed
        // TODO add your handling code here:
        String strConnect = new String(jTextFieldCOM.getText());
        System.out.println("Connecting to " + strConnect);
        boat = new RobSailBoat(strConnect);
        if (boat.connect("Alex")) {
            System.out.println("Connected to " + strConnect);
            jButtonConnectGate.setEnabled(false);
            jButtonDisconnect.setEnabled(true);
            jButtonConnectCOM.setEnabled(false);
        }
}//GEN-LAST:event_jButtonConnectCOMActionPerformed

    private void jCheckBoxOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOutActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxOut.isSelected()) {
            this.textRefresher = new TextRefresher(boat, this.jTextArea1);
            this.textRefresher.start();
        } else {
            if (this.textRefresher != null) this.textRefresher.stop = true;
        }
}//GEN-LAST:event_jCheckBoxOutActionPerformed

    private void jCheckBoxInvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxInvertActionPerformed
        // TODO add your handling code here:
        if (boat != null) boat.inverted = this.jCheckBoxInvert.isSelected();
}//GEN-LAST:event_jCheckBoxInvertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnectCOM;
    private javax.swing.JButton jButtonConnectGate;
    private javax.swing.JButton jButtonDisconnect;
    private javax.swing.JCheckBox jCheckBoxAI;
    private javax.swing.JCheckBox jCheckBoxCtrl;
    private javax.swing.JCheckBox jCheckBoxInvert;
    private javax.swing.JCheckBox jCheckBoxOut;
    private javax.swing.JComboBox jComboBoxIP;
    private javax.swing.JComboBox jComboBoxMAC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldCOM;
    private javax.swing.JTextField jTextFieldPort;
    // End of variables declaration//GEN-END:variables

}
