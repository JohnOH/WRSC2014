/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WolrdServerGUI.java
 *
 * Created on Sep 28, 2010, 1:46:16 PM
 */

package worldserver.gui;

import java.io.*;
import javax.swing.*;

import org.jdesktop.swingx.mapviewer.*;

import worldserver.data.*;
import worldserver.com.client.*;

/**
 *
 * @author Alex
 */
public class WorldServerGUI extends javax.swing.JFrame {

    protected InputMap inputMap = null;

    protected WorldServerMapClient mapClient = null;

    protected MapRefresher mapRefresher = null;

    protected JFileChooser fc = null;
    //new JFileChooser("c:\\");
    //new JFileChooser(System.getProperty("user.dir") + "/map");

    /** Creates new form WolrdServerGUI */
    public WorldServerGUI() {
        initComponents();        
        this.jTabbedPane1.setEnabledAt(1,false);
        this.jTabbedPane1.setEnabledAt(2,false);
        init();
    }

    protected void init() {        
        fc = new JFileChooser(System.getProperty("user.dir") + "/map");
        inputMap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if ((mapClient != null) && (evt.getButton() == evt.BUTTON1)) {
                    GeoPosition gp = inputMap1.getJXMapViewer().convertPointToGeoPosition(evt.getPoint());
                    if (jRadioButton1.isSelected()) {
                        mapClient.update(new worldserver.object.Buoy(
                                gp.getLatitude(),
                                gp.getLongitude(),
                                jSlider1.getValue()));
                    }
                    else if(jRadioButton2.isSelected()) {
                        mapClient.update(new worldserver.object.CircularObstacle(
                                gp.getLatitude(),
                                gp.getLongitude(),
                                jSlider1.getValue()));
                    }
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        inputMap1 = new map.InputMap();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jSlider1 = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WorldServerGUI");

        jLabel1.setText("IP");

        jTextField1.setText("127.0.0.1");

        jLabel2.setText("Port");

        jTextField2.setText("6004");

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Disconnect");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(382, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Connect", jPanel3);
        jTabbedPane1.addTab("Map", inputMap1);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Buoy");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Obstacle");

        jSlider1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jSlider1.setMajorTickSpacing(100);
        jSlider1.setMaximum(2500);
        jSlider1.setMinimum(50);
        jSlider1.setMinorTickSpacing(50);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jRadioButton1)
                .addComponent(jRadioButton2)
                .addGap(2, 2, 2)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("MapEditor", jPanel1);

        jMenu1.setText("File");
        jMenu1.setEnabled(false);

        jMenuItem2.setText("Load");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Save");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.mapClient = new WorldServerMapClient(this.jTextField1.getText(), Integer.parseInt(this.jTextField2.getText()));
        if (this.mapClient.connect()) {
            this.jButton1.setEnabled(false);
            this.jButton2.setEnabled(true);
            this.jMenu1.setEnabled(true);
            this.jTabbedPane1.setEnabledAt(1,true);
            this.jTabbedPane1.setEnabledAt(2,true);
            this.mapRefresher = new MapRefresher(mapClient,inputMap1);
            this.mapRefresher.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.mapRefresher.stop = true;
        this.mapClient.disconnect();
        this.mapClient = null;
        this.jMenu1.setEnabled(false);
        this.jButton1.setEnabled(true);
        this.jButton2.setEnabled(false);
        this.jTabbedPane1.setEnabledAt(1,false);
        this.jTabbedPane1.setEnabledAt(2,false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            WorldServerData tmp = this.mapClient.getWorldServerData();
            WorldServerData data = new WorldServerData();
            for (WorldServerRecord wsr : tmp.values()) {
                if ((wsr.source instanceof worldserver.object.Buoy)
                        || (wsr.source instanceof worldserver.object.CircularObstacle)) {
                    data.put(wsr.source.getId(), wsr);
                }
            }
            try {
                ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fc.getSelectedFile().getPath()));
                oos.writeObject(data);
                oos.flush();
                oos.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            WorldServerData data = null;
            try {
                ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fc.getSelectedFile().getPath()));
                data = (WorldServerData) ois.readObject();
                ois.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            if (data != null) {
                this.mapClient.putWorldServerData(data);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WorldServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private map.InputMap inputMap1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
